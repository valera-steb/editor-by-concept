перетягиваемые элементы

части:
.контейнер элементов.
.перетягиваемый элемент.
.превью область.



демка:
.пару панелей - перетягивать можно только между несколькими.
.внутри список и просто приёмник.
.в зависимости от перетягиваемого элемента можно тягать по разному...



функционал:
.1.drag на элементе срабатывает после того как кликнули и потянули некоторое расстояние.


вопросы:
.как я хочу что-бы выглядело перетягивание?
    .скрывать ли в источнике перетягивания.

    .тянеться копия - т.е. в том-же виде как есть?
    .тянеться значёк.

    .как показываеться в допустимом целевом контейнере.

    .как показывать запрещённое перетягивание.

    + хотелось-бы подсветить контейнеры допустимые.

+ а ведь ещё тянуть можно просто в контейнере - меняя порядок.


=> хотелось бы увидеть:
    .в настройках элемента/контейнера указывать тип тянущегося:
        .slef - +добавляеться класс - moving.
            потянеться div с ng-transclude
            скроеться в элементе источнике - останеться только пометка откуда.

        .copy - добавиться отдельный див, который можно тянуть. В диве ещё один ng-transclude.

    + draggingTemplate
        .если есть, с селф - то добавит шаблон и потянем его.
        .если с copy - див по шаблону.


    .в настройках контейнера:
        .тип превью:
            .containerMark
            .locationLine

        .какая-либо функция валидации доступности контейнера...



факторы:
.ф1.при перетягивании можно скроллить колесом.

.ф2:
    .$("div.content").offset() - возвратит координаты первого div-элемента с классом content,
        относительно начала страницы.
    + с параметрами: {top:30, left:100} - устанавливает координаты относительно начала страницы,
        при этом все выбранные элементы, у которых не задан тип позиционирования (то есть position = static),
        автоматически изменят позиционирование на относительное (relative).




что-же выбрать - какой вариант перетягивания:
.по hover - т.е. ожидаеться что контейнеры будут отлавливать на себе это событие,
 и как минимум определять что кидать думают в них,
 может так-же добавить ховер на элементы в контейнерах - и определять более точно место, куда будет падать.
    .тут нужно как-то уточнить крайние случаи - вставить первым/последним.

.просчёт геометрических размеров:
    .т.е. по $.offset() и offsetWidth/offsetHeight определить квадраты задействованных:
        .контейнеров, элементов, перетягиваемого элемента.
    .в процессе перетягивания просчитывать куда попадает
        .только додумав как в геометрии считать это попадание
     и отображать исходя из этого

+ к обоим вопросы:
    .при отображении точки попадания, поедут элементы - т.е. их геометрия поменяеться:
        .в случае hover может сработать событие.
        .в случае "квадратов" - эм... пересчёт для контейнера элементов?

    .а что будет если как-то иначе поменяеться страничка - например догрузиться какой-то элемент заняв
     какое-то пространство и сместив контейнер в который сейчас забрасываю?

=> уточнение для hover:
    .при попадании в контейнер, с дозволенным порядком:
        .в самом начале списка добавлять ещё один элемент, который будет заглушкой
         - при наведении на него, сигнализирует что сюда падать будет.
        .для всех элементов - наведение на них подразумевает подение под них.






