что поменялось с наброском Draggable/element/MoveController?
.произошло:
    .я взял внешний код, который просто демо.
    .добавил в проэкт, увидил как работает.
    .после уложил его на должное место (должное с точки зрения подхода).
    + и вот что-то сошлось...
.кстати:
    .контроллер в таком его виде оказался очень близким к понятию стереотипа.
     поскольку отслеживает ввод и оповещает - тем самым вводя информацию в систему/"свой_код".





что-то не так происходит:
.я беру частные вещи и из них собираю неч-то общее.
.а стоит увидеть в начале общее, которое потом бить на частные кусочки.

.в отношении перетягиваемых - что есть самым общим, где универсум?
+ есть:
    .контроль перемещения мыши -> даёт набор событий с их координатами.
    .теперь упёрся в детали движения - т.е. как оно будет выглядеть.
    .ещё надо будет как-то контролировать области, подсвечивать...

.а если общим алгоритмом:
    .взял элемент.
    .определил:
        .настройки перетягивания - как оно будет выглядеть.
        .куда его тянуть можно - в какие контейнеры, свой собственный перемещаемый ли.
    .тяну
        .в процессе подсвечивая куда может упасть элемент.
        .тут надо:
            .определять над контейнером ли тяну.
            .если да - может ли контейнер принять элемент.
            .если да:
                .как отображать элемент над контейнером.
                .как отображать предпологаемое получение контейнером элемента:
                    .либо контейнер подсвечивать.
                    .либо в контейнере место/holder показывать где упадёт.
    .кинул:
        .с определением что должно произойти:
            .скопировать, переместить, вернуть обратно.

=> вот этот процесс выразить/описать в коде надо. И дальше его детализировать.


далее о процессе:
.в начале стоит прояснить, на каких факторах я основывался:
    .набор событий - mousedown, mouseup, mousemove.
    + hover - собираюсь добавить.
+ ещё видимые:
    .регистр контейнеров:
        .т.е процесс поддержания списка актуальных контейнеров.
        .нужен по существу только что-бы знать на кого hover вешать
         хотя дополнительный бонус - пометка допустимых контейнеров.
    .валидация контейнером элемента:
        по элементу и его текущему контейнеру данный контейнер должен
        выдать определить тип добавления: никак, перенос, вставка.



меня раздрожает:
.процесс, когда одновременно дорабатываеться несколько уровней/этапов ПФУ.
.т.е. нету законченной цепочки - от фактора до структуры.
.а этапы заполняються частями и ещё возникают ситуации, когда отказываюсь от разсмотрения некоторых факторов.
    .тем самым отказываясь и от структур далее от них построенных.
    .но я хотел-бы запоминать эти наброски, причины зачем они были и почему отказались.
    .как и где их оформлять?
    .как чистить рабочую систему от них?





что выноситься в фичу?
.описание сценария фичи, которое основанно на языке, из интерфейсов к этой фичи от используемых компонентов.
.основные моменты - целостность образующие вещи...
    .как по яснее выразить вот это понятие целостности?
        .точка сборки?
        .управляющая часть - субъект управления?
        .место в котором вся функциональность собираеться - сетевая модель?
        .план, сценарий - но я хочу подчеркнуть, что это нечто работающее. Однако оно остаёться описанием.

+ каким критериям это что (выносимое в фичу) соответствует?





контроллер адресуемый в ngRoute как фича, точка сборки суб контроллеров/фич.
.предпосылка:
    .на экране собираеться несколько контроллеров.
    .контроллеры могут взаимодействовать между собой по разному.
    .конкретика в контроллере экрана.
.ход разработки:
    .макетирование - собираеться всё в контроллере.
    .фиксация/осознание отвтственностей и их очерчивание.
    .разнос по отдельным контроллерам/директивам/сервисам.
    .переосмысление распределения обязаностей.










почему не цепляет продолжение разработки демо?



















